#!/bin/bash

# TODO:
# - filter out stuff from /etc/portage/package.use
# - add expanded flags to filter list
# - add options: quiet, keep minus, force caching
# - add enable/disable/prune with alphabetical sorting
# - add config files to manually filter out stuff
# - doc, manpage

. /lib/gentoo/functions.sh

echo_list() {
	if [[ $1 != "" ]]; then
		if yesno ${IN_COLUMN}; then
			echo -n "${1}"
		else
			echo -n ${1}
		fi
		echo
	fi
}

emerge_world() {
	if [[ ! -f /tmp/USEful-emerge-output ]]; then
		ebegin "Caching @world"
		emerge -vpe @world > /tmp/USEful-emerge-output 2>&1
		eend
	fi
}

list_all_flags() {
	# TODO: copied from list_flags(). Simplify.
	local filtered
	filtered=$(echo "${PACKAGES}" | grep " ${1}=" | sed "s/^\([^ ]*\).* ${1}=\"\([^\"]*\).*/\1 \2 /" | sed 's/::[A-Za-z0-9-]*//g;s/%//g;s/[ \"]([^)]*)//g;s/[ \"]{[^}]*}//g')
	echo "${filtered}" | cut -d " " -f 2- | tr " " "\n" | sort -u | grep -v "^$"
}

list_flags() {
	local filtered makeconf_flags flag
	filtered=$(echo "${PACKAGES}" | grep " ${1}=" | sed "s/^\([^ ]*\).* ${1}=\"\([^\"]*\).*/\1 \2 /" | sed 's/::[A-Za-z0-9-]*//g;s/%//g;s/[ \"]([^)]*)//g;s/[ \"]{[^}]*}//g')
	makeconf_flags=$(. /etc/portage/make.conf; echo "${!1}")
	for flag in ${makeconf_flags}; do
		filtered=$(echo "${filtered}" | sed "s/ ${flag} / /")
	done
	echo "${filtered}" | cut -d " " -f 2- | tr " " "\n" | sort -u | grep -v "^$"
}

enabled() {
	grep -v "^-"
}

disabled() {
	grep "^-"
}

set_expand() {
	if [[ ${1} != "" ]]; then
		EXPAND=${1}
	fi
}

list_enabled() {
	set_expand ${1}
	echo_list "$(list_flags ${EXPAND} | enabled)"
}

list_disabled() {
	set_expand ${1}
	echo_list "$(list_flags ${EXPAND} | disabled)"
}


EINFO_QUIET=no
IN_COLUMN=no
EXPAND=USE

emerge_world
PACKAGES=$(sed -n '/="/s/^\[[^]]*] \(.*\) [0-9]* KiB/\1/p' /tmp/USEful-emerge-output)
EXPANDS=$(echo "${PACKAGES}" | sed -n 's/^[^=]* \([A-Z0-9_]*="\)/\1/;s/\([A-Z0-9_]*\)="[^"]*"/\1/g;s/ /\n/gp' | sort -u)

case ${1} in
enabled)
	list_enabled ${2};;
disabled)
	list_disabled ${2};;
expands)
	echo_list "${EXPANDS}";;
flags)
	echo_list "$(list_flags ${2})";;
all-flags)
	echo_list "$(list_all_flags ${2})";;
packages)
	echo "${PACKAGES}"
esac
