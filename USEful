#!/bin/bash

# TODO:
# - filter out stuff from /etc/portage/package.use
# - add expanded flags to filter list
# - add option: force caching
# - add enable/disable/prune/sort with alphabetical sorting
# - add config files to manually filter out stuff
# - show help when no command, add help command
# - more exhaustive error checking
# - more code comments
# - doc, manpage

source /lib/gentoo/functions.sh

#
# Verify the EXPAND_USE name is valid, i.e. in the EXPANDS list
# $1: the USE_EXPAND to verify
#
check_expand() {
    if [[ $(echo "${EXPANDS}" | grep "^${1:-USE}$") ==  "" ]]; then
        eerror "${1} is not a valid USE_EXPAND"
    fi
}

#
# Output a list all on the same line or one item per line depending on the sate of the IN_COLUMN variable.
# $1: the list to output
#
echo_list() {
    local list="${1}"
    if ! yesno ${KEEP_MINUS}; then
        list=$(echo "${list}" | sed 's/^-//')
    fi
    list=$(echo "${list}" | sort -u | grep -v '^$')
    if [[ $1 != "" ]]; then
        if yesno ${IN_COLUMN}; then
            echo -n "${list}"
        else
            echo -n ${list}
        fi
        echo
    fi
}

#
# Execute an arbitrary function using an EXPAND_USE variable as its first parameter. The EXPAND_USE variable is first
# checked for validity and replaced by USE if empty.
# $1: the function to execute
# $2: the EXPAND_USE variable
#
execute() {
    check_expand ${2}
    ${1} ${2:-USE}
}

#
# In the list of packages with their flags, only keep those packages having the EXPAND_USE variable being dealt with,
# and only keep the corresponding flags. All flags for other EXPAND_USE variables and packages without this particular
# EXPAND_USE variable are dropped.
# ${1}: the EXPAND_USE variable
#
filter_expands() {
    echo "${PACKAGES}" | grep " ${1}=" | sed "s/^\([^ ]*\).* ${1}=\"\([^\"]*\).*/\1 \2 /" |
        sed 's/::[A-Za-z0-9-]*//g;s/%//g;s/[ \"]([^)]*)//g;s/[ \"]{[^}]*}//g'
}

#
# Output all visible flags for a given EXPAND_USE variable.
# ${1}: the EXPAND_USE variable
#
list_all_flags() {
    echo_list "$(filter_expands ${1} | cut -d ' ' -f 2- | tr ' ' '\n')"
}

#
# Filter flags in the list of visible flags for a given EXPAND_USE variable.
# Dropped flags are those listed in:
#  - /etc/portage/make.conf
#  - /etc/portage/package.use
#  - TODO: complete that list
# ${1}: the EXPAND_USE variable
#
filter_flags() {
    local filtered makeconf_flags flag
    filtered="$(filter_expands ${1})"
    makeconf_flags=$(source /etc/portage/make.conf; echo "${!1}")
    for flag in ${makeconf_flags}; do
        filtered=$(echo "${filtered}" | sed "s/ ${flag} / /")
    done
    # TODO: finish filtering
    echo "${filtered}" | cut -d " " -f 2- | tr " " "\n"
}

#
# Output all visible flags for a given EXPAND_USE variable, filtered with filter_flags().
# ${1}: the EXPAND_USE variable
#
list_flags() {
    echo_list "$(filter_flags ${1})"
}

#
# Only keep enabled flags. Use this with a pipe.
#
enabled() {
    grep -v "^-"
}

#
# Only keep disabled flags. Use this with a pipe.
# TODO: deal with optionally removable minus sign.
#
disabled() {
    grep "^-"
}

#
# Output all flags for a given EXPAND_USE which are not explicitely enabled and could need to be looked at.
# ${1}: the EXPAND_USE variable
#
list_enabled() {
    echo_list "$(filter_flags ${1} | enabled)"
}

#
# Output all flags for a given EXPAND_USE which are not explicitely disabled and could need to be looked at.
# ${1}: the EXPAND_USE variable
#
list_disabled() {
    echo_list "$(filter_flags ${1} | disabled)"
}


EINFO_QUIET="${EINFO_QUIET:-no}"
IN_COLUMN="${IN_COLUMN:-no}"
KEEP_MINUS="${KEEP_MINUS:-no}"

while [[ ${1:0:1} == "-" ]]; do
    case ${1} in
        --column|in-column)
            IN_COLUMN=yes;;
        --keep|--keep-minus)
            KEEP_MINUS=yes;;
        --quiet)
            EINFO_QUIET=yes;;
        --*)
            eerror "Unknown long option: ${1}"
            exit 1;;
        -)
            eerror "Lone stray dash"
            exit 1;;
        -*)
            option_list=${1:1}
            while [[ ${#option_list} != "0" ]]; do
                case ${option_list:0:1} in
                    1|c)
                        IN_COLUMN=yes;;
                    k)
                        KEEP_MINUS=yes;;
                    q)
                        EINFO_QUIET=yes;;
                    *)
                        eerror "Unknown short option: -${option_list:0:1}"
                        exit 1;;
                esac
                option_list=${option_list:1}
            done
    esac
    shift
done

if [[ ! -f /tmp/USEful-emerge-output ]]; then
    ebegin "Caching @world"
    emerge -vpe @world > /tmp/USEful-emerge-output 2>&1
    eend
fi
PACKAGES=$(sed -n '/="/s/^\[[^]]*] \(.*\) [0-9]* KiB/\1/p' /tmp/USEful-emerge-output)
EXPANDS=$(echo "${PACKAGES}" | sed -n 's/^[^=]* \([A-Z0-9_]*="\)/\1/;s/\([A-Z0-9_]*\)="[^"]*"/\1/g;s/ /\n/gp' | sort -u)

case ${1} in
    all-flags)
        execute list_all_flags ${2};;
    enabled)
        execute list_enabled ${2};;
    expands)
        echo_list "${EXPANDS}";;
    disabled)
        execute list_disabled ${2};;
    flags)
        execute list_flags ${2};;
    packages)
        echo "${PACKAGES}";;
    *)
        eerror "Unknown command: ${1}";;
esac
